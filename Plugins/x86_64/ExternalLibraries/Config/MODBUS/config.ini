#
#		配置示例:
#				从机地址		功能码		寄存器地址	寄存器个数		校验码
#		读取:	01				03			00 00		00 02			C4 0B
#				slave_addr					read_addr	read_num
#		
#											数据长度		寄存器数据													校验码
#		接收	01				03			04				00 00 0B 10													FC CF
#															解析模式0:  Axis_00=0x0000=0			Axis_01=0x0b10=2832
#															解析模式1:	Axis_00=0x00000b10=2832
#															实际值将会除以divisor得到最终的值


[modbus_1]
driver=modbus_rtu

# 串口号
port=3
# 波特率
baud_date=9600
# 数据位
data_bit=8
# 停止位
stop_bit=1
# 校验位 N-无校验 E-偶校验 O-奇校验
parity=N


# 从机地址
slave_addr=1
# 超时时间 ms
read_timeout=50
# 写入超时时间 ms
write_timeout=100


## 开关量输入相关配置
# di 功能码
di_func=0x02
# 读取DI地址        
di_addr=0x0000
# 读取DI通道数
di_num=0x0020
# 异步读取di
di_async_read=1


## 模拟量输入相关配置
# ai 功能码
ai_func=0x03
# 读取AI地址
ai_addr=0x0000
# 读取AI寄存器个数
ai_num=0x0002
# 异步读取ai
ai_async_read=1
# 解析模式 0. 按寄存器分割(每个寄存器的值单独放入一个通道)	1. 整数数值
parse_mode=1
# 除数 因为IOToolkit默认模拟量范围支持-32768-32767, 故需要将实际值映射到该范围内
divisor=1000
# 跳变阈值
jump_threshold=500

# 设备加载时自动写入的寄存器地址和数据

# 写单个寄存器地址及数据
#write_single_addr_0=0x0000			# 寄存器地址
write_single_data_0=0x0000			# 寄存器值

# 写多个寄存器起始地址及数据
# write_multi_addr_0=0x0170			# 寄存器起始地址
write_multi_num_0=0x0002			# 写入寄存器数量
write_multi_data_0_0=0x001B			# 寄存器值
write_multi_data_0_1=0x7740			# 寄存器值


[modbus_2]
# modbus驱动类型  modbus_tcp, modbus_rtu
driver=modbus_tcp
# IP地址
ip=127.0.0.1
# 端口号
port=502


# 从机地址
slave_addr=1
# 超时时间 ms
read_timeout=120
# 写入超时时间 ms
write_timeout=100

## 开关量输入相关配置
# di 功能码
di_func=0x02
# 读取DI地址        
di_addr=0x0000
# 读取DI通道数
di_num=0x0020
# 异步读取di
di_async_read=1


## 模拟量输入相关配置
# ai 功能码
ai_func=0x03
# 读取AI地址
ai_addr=0x0000
# 读取AI寄存器个数
ai_num=0x0002
# 异步读取ai
ai_async_read=1
# 解析模式 0. 按寄存器分割(每个寄存器的值单独放入一个通道)	1. 整数数值
parse_mode=1
# 除数 因为IOToolkit默认模拟量范围支持-32768-32767, 故需要将实际值映射到该范围内
divisor=1000